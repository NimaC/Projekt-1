=== Projektidee NimaC, 2016-04-05 ===

(Umfrageportal wie Strawpoll.me

Also eine Anwendung die Eingaben zählt, auswertet und ausgibt.)


=== Feedback Alpers, 2016-04-06 ===

Zunächst ein formaler Hinweis: Sie sollten im Repository ein Verzeichnis mit dem Namen Dokumentation erstellen und darin die Datei mit der Projektidee speichern. Bitte ändern Sie das entsprechend ab. Wenn Sie die Aufgabenstellung im Kapitel 5 nicht gelesen haben, dann holen Sie das jetzt nach.

Das ist leider keine gute Beschreibung einer Projektidee im Sinne eines Softwareprojekts. Ihre Aufgabe war es ja, zu beschreiben, was ein Programm tun soll, das Sie gerne hätten. Und Ihre Beschreibung besteht darin, dass Sie ein fertiges Projekt nennen, das Sie nachprogrammieren wollen.

Dazu kommt, dass Ihr Vorschlag leider sehr dünn ist: Ein Programm, das nicht mehr tut als Eingaben zu zählen und die Zahlen auszugeben. Da fehlt die Interaktion mit NutzerInnen. Wenn Ihnen der Begriff unklar ist, dann denken Sie an ein Brettspiel, bei dem Sie viele Dinge tun müssen, die ein Computer übernehmen würde. Das können komplexe Berechnungen sein, zufällig ausgewählte Aktionskarten, das verschieben von Spielfiguren, usw. usf.

Versuchen Sie deshalb das Spiel Adventure Tours umzusetzen: http://www.brettspiele-report.de/adventure-tours/

=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.

Viele Grüße,
Markus Alpers 

=== Feedback Ende ===

> Umsetzung des Brettspiels "Adventure Tours" http://www.brettspiele-report.de/adventure-tour/s
>
> 3-6 Spieler Lokal an einem Rechner

=== Feedback Alpers, 2016-04-27 ===

Eine Webanwendung bietet doch gerade die großartige Möglichkeit, dass Spieler online zusammenspielen können. 

Auch die Beschränkung der Spielerzahl ist unnötig. Hier ist es Ihre Aufgabe, sich später zu überlegen, wie Sie das Spiel mit weniger/mehr Spielern ermöglichen können.

=== Feedback Ende ===

> "Jeder Spieler stellt für sich eine Expedition zusammen und versucht hierbei schneller zu sein und zahlungskräftigere Expeditionsteilnehmer anzuheuern als seine Mitspieler.
> Leider haben die Expeditionsteilnehmer einen gewissen Anspruch an die Ausrüstung und dieser steigt sogar noch mit ihrer Zahlungsfähigkeit. 
> Die Ausrüstung muss daher dringendst verbessert werden.
> Das Anheuern von Expeditionsteilnehmern und das Verbessern der Ausrüstung geschieht über sogenannte Abenteurerkarten. 
> Als Expeditionsteilnehmer gespielt geben sie dem Spieler auch eine Sonderaktion mit der er seinen Mitspielern auch mal Expeditionsteilnehmer oder Ausrüstungen abnehmen kann.
> Es ist daher gar nicht so einfach die Expedition zusammenzustellen und zusammenzuhalten."

=== Feedback Alpers, 2016-04-27 ===

Ihre Aufgabe bestand bei der Beschreibung der Projektidee, das Projekt so zu beschreiben, wie in Kap. 5 vorgegeben. Hier haben Sie nur die Beschreibung der Webpage kopiert. Bitte nochmal.

=== Feedback Ende ===

Umsetzung des Brettspiels Adventure Tours als Webanwendung für 3-6 Mitspieler lokal an einem Rechner.

Ziel des Spiels: Nach 3 Runden am meisten Gold besitzen.
Expeditionsteilnehmer zahlen pro Runde Gold.
 
=== Benutzeroberfläche === 
- Expeditionstableau : hat 3 Attribute z.B. "Technik", "Proviant" und "Kleidung" + Spezialfähigkeit
- Abenteuerkarten : bessert Attribute auf + zeigt benötigte Attribute um als Expeditionsteilnehmer auszuspielen + Spezialfähigkeit (Als Expeditionsteilnehmer gibt er Gold pro Runde)
- Übersichtskarte : Übersicht der Spezialfähigkeiten

=== Interaktionen === 
- Abenteuerkarte: Kann entweder Rechts oder Über dem Expeditionstableau abgelegt werden. Rechts vom Expiditionstableau wertet es die Attribute der Expidition auf. Über dem Tableau abgelegt wird es zum Expiditionsteilnehmer.
- Spezialfähigkeiten: Diverse Effekte
- Zug Beenden

